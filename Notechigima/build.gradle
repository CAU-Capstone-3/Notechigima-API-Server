plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.capstone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    // lombok에서 mapstruct 지원
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //h2 database
    implementation 'com.h2database:h2'

    //mysql
    runtimeOnly 'mysql:mysql-connector-java'

    //jdbc
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // log4j2
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // json
    implementation 'org.json:json:20220320'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
}

tasks.named('test') {
    exclude { '/**/*' }
    useJUnitPlatform()
}

jar {
    enabled = false
}
